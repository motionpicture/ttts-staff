<%
    const tempReservationModel = reservationModel.transactionInProgress;
    const isWheelchair = (tempReservationModel.category === 'wheelchair');
    const tempReservationModel_reservations = tempReservationModel.reservations;
    let watcherName = '';
    if(watcher_name){
        watcherName = watcher_name
    }
    if (tempReservationModel_reservations.length > 0){
        watcherName = tempReservationModel_reservations[0].watcher_name;
    }
    const ticketCountMax = 41;
%>

<%- include('./_step', {currentStepName: 'tickets'}) %>

<input type="hidden" name="category" value="<%= tempReservationModel.category %>">

<h1 class="pagetitle"><%- __('SelectTickets') %></h1>
<p class="guidetext"><%- __('SelectTicketsGuideText') %></p>

<% if (message) { %>
<p class="guidetext red"><%= message %></p>
<% } %>

<a class="link-guide" href="/ticketinfo" target="_blank"><%- __('AboutTicket') %></a>

<div class="wrapper-2clm">
    <div class="clm-left" data-token="">
        <table class="table table-tickets">
            <thead>
                <tr>
                    <th><%- __('TicketType') %></th>
                    <th><%- __('TicketCount') %></th>
                </tr>
            </thead>
            <tbody>
                <%
                    // 車椅子予約なので車椅子の券を上位に持ってくる
                    if (isWheelchair) {
                        tempReservationModel.ticketTypes.sort((a, b) => {
                            let ticketTypeCategory4a = '';
                            let ticketTypeCategory4b = '';
                            if (Array.isArray(a.additionalProperty)) {
                                const categoryProperty4a = a.additionalProperty.find((p) => p.name === 'category');
                                if (categoryProperty4a !== undefined) {
                                    ticketTypeCategory4a = categoryProperty4a.value;
                                }
                            }
                            if (Array.isArray(a.additionalProperty)) {
                                const categoryProperty4b = b.additionalProperty.find((p) => p.name === 'category');
                                if (categoryProperty4b !== undefined) {
                                    ticketTypeCategory4b = categoryProperty4b.value;
                                }
                            }

                            if (ticketTypeCategory4b === 'Wheelchair') {
                                if (ticketTypeCategory4a === ticketTypeCategory4b) {
                                    return 0;
                                }
                                return 1;
                            } else if (a.id > b.id) {
                                return -1;
                            }
                            return 0;
                        });
                    }
                    tempReservationModel.ticketTypes.forEach(function(ticketType) {
                        let ticketTypeCategory = '';
                        if (Array.isArray(ticketType.additionalProperty)) {
                            const categoryProperty = ticketType.additionalProperty.find((p) => p.name === 'category');
                            if (categoryProperty !== undefined) {
                                ticketTypeCategory = categoryProperty.value;
                            }
                        }

                        // 一般予約(general)だったら一般券種以外を弾く
                        if (tempReservationModel.category === 'general' && ticketTypeCategory !== 'Normal') {
                            return true;
                        }

                        let unitPrice = 0;
                        if (ticketType.priceSpecification !== undefined) {
                            unitPrice = ticketType.priceSpecification.price;
                        }
                %>
                <tr data-ticket-code="<%- ticketType.id %>" data-ticket-charge="<%= unitPrice %>">
                    <th>
                        <span><%- ticketType.name[locale] %>
                            <%- __('{{price}} yen', { price: unitPrice } ) %></span>
                    </th>
                    <td>
                        <select id="select_ticketq_<%- ticketType.id %>" class="form-control">
                            <% for (let ticketCount = 0; ticketCount <= ticketCountMax; ticketCount++) { %>
                            <option value="<%- ticketCount.toString() %>" <% if (ticketCount === ticketType.count) { %>
                                selected="selected" <% } %>><%- ticketCount.toString() %></option>
                            <% } %>
                        </select>
                    </td>
                </tr>
                <%
                });
                %>

                <tr>
                    <td colspan="2">
                        <input type="text" id="input_watcherName" name="watcherName" class="form-control"
                            placeholder="予約メモ" value="<%- watcherName %>">
                    </td>
                </tr>
            </tbody>
            <tfoot class="hidden">
                <tr>
                    <td colspan="2">
                        <%- __('TotalPrice') %> <span class="price"><span
                                id="echo_total"></span><%- __('{{price}} yen') %></span>
                    </td>
                </tr>
            </tfoot>
        </table>
    </div>

    <div class="clm-right">
        <%- include('./_reservationModel', { tempReservationModel }) %>
    </div>

</div>

<form method="post">
    <input type="hidden" name="choices">
</form>

<p class="alert-ticket alert-ticket-overmax">
    <%- `選択出来る枚数は ${conf.get('reservation_maxq')} 枚までとなります。` %>
</p>

<script src="/js/reserve/tickets.js"></script>